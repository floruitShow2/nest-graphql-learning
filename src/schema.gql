# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type FlavorEntity {
  """A unique identifier for flavor"""
  id: ID
  name: String!
  category: String!
}

"""Coffee Model"""
type CoffeeEntity {
  """A unique identifier"""
  id: ID!
  flavors: [FlavorEntity!]!
  createAt: Timestamp
  name: String!
  brand: String!
  category: String!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type HumanEntity implements Character {
  id: ID!
  name: String!
  job: String!
  friends(name: String!): [HumanEntity!]!
}

interface Character {
  id: ID!
  name: String!
}

type Query {
  coffees: [CoffeeEntity!]!
  coffee(id: ID!): CoffeeEntity
  characters: HumanEntity!
  search: [ResultUnion!]!
}

union ResultUnion = HumanEntity | SocialEntity

type SocialEntity {
  url: String!
}

type Mutation {
  createCoffee(createCoffeeInput: CreateCoffeeInput!): CoffeeEntity
  updateCoffee(id: String!, updateCoffeeInput: UpdateCoffeeInput!): CoffeeEntity
  deleteCoffee(id: String!): Boolean
}

input CreateCoffeeInput {
  name: String!
  brand: String!
  category: String!
}

input UpdateCoffeeInput {
  name: String
  brand: String
  category: String
}

type Subscription {
  coffeeAdded(id: Float!): CoffeeEntity!
}